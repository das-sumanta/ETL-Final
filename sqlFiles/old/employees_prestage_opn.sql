/* prestage - drop intermediate insert table */
drop table if exists dw_prestage.employees_insert;

/* prestage - create intermediate insert table*/
create table dw_prestage.employees_insert
as
select * from dw_prestage.employees
where exists ( select 1 from  
(select employee_id from 
(select employee_id from dw_prestage.employees
minus
select employee_id from dw_stage.employees )) a
where  dw_prestage.employees.employee_id = a.employee_id );

/* prestage - drop intermediate update table*/
drop table if exists dw_prestage.employees_update;

/* prestage - create intermediate update table*/
create table dw_prestage.employees_update
as
select decode(sum(ch_type),3,2,sum(ch_type)) ch_type ,employee_id
from
(
SELECT employee_id , CH_TYPE FROM 
(  
select employee_id , SUPERVISOR_NAME,SUPERVISOR_ID,APPROVER_ID,APPROVER_NAME, '2' CH_TYPE from dw_prestage.employees
MINUS
select employee_id , SUPERVISOR_NAME,SUPERVISOR_ID,APPROVER_ID,APPROVER_NAME, '2' CH_TYPE from dw_stage.employees
)
union all
SELECT employee_id , CH_TYPE FROM 
(  
select employee_id,JOBTITLE,EMAIL,LINE1,LINE2,LINE3,ZIPCODE,CITY,STATE,COUNTRY,SUBSIDIARY,SUBSIDIARY_ID,LINE_OF_BUSINESS,LINE_OF_BUSINESS_ID,LOCATION,LOCATION_ID,COST_CENTER,DEPARTMENT_ID,HIREDDATE	,RELEASEDATE, '1' CH_TYPE from dw_prestage.employees
MINUS
select employee_id,JOBTITLE,EMAIL,LINE1,LINE2,LINE3,ZIPCODE,CITY,STATE,COUNTRY,SUBSIDIARY,SUBSIDIARY_ID,LINE_OF_BUSINESS,LINE_OF_BUSINESS_ID,LOCATION,LOCATION_ID,COST_CENTER,DEPARTMENT_ID,HIREDDATE	,RELEASEDATE, '1' CH_TYPE from dw_stage.employees
)
) a where not exists ( select 1 from dw_prestage.employees_insert
where dw_prestage.employees_insert.employee_id = a.employee_id) group by employee_id;

/* prestage - drop intermediate delete table*/
drop table if exists dw_prestage.employees_delete;

/* prestage - create intermediate delete table*/
create table dw_prestage.employees_delete
as
select * from dw_stage.employees
where exists ( select 1 from  
(select employee_id from 
(select employee_id from dw_stage.employees
minus
select employee_id from dw_prestage.employees )) a
where dw_stage.employees.employee_id = a.employee_id );

/* prestage-> stage*/
select 'no of prestage vendor records identified to inserted -->'||count(1) from  dw_prestage.employees_insert;

/* prestage-> stage*/
select 'no of prestage vendor records identified to updated -->'||count(1) from  dw_prestage.employees_update;

/* prestage-> stage*/
select 'no of prestage vendor records identified to deleted -->'||count(1) from  dw_prestage.employees_delete;

/* stage -> delete from stage records to be updated */
delete from dw_stage.employees 
using dw_prestage.employees_update
where dw_stage.employees.employee_id = dw_prestage.employees_update.employee_id;

/* stage -> delete from stage records which have been deleted */
delete from dw_stage.employees 
using dw_prestage.employees_delete
where dw_stage.employees.employee_id = dw_prestage.employees_delete.employee_id;

/* stage -> insert into stage records which have been created */
insert into dw_stage.employees(ABCD_MARKER_ID,ACCOUNTNUMBER,ACTUAL_COST,ADDRESS,ALTERNATE_CUSTOMER_EMAIL,ALTERNATE_CUSTOMER_EMAIL1,ALTERNATE_CUSTOMER_EMAIL2,APPLY_FREIGHT,APPROVALLIMIT,APPROVER_ID,BACKORDERS_ALLOWED,BACK_ORDER_SPLIT, BILLING_CLASS_ID, BIRTHDATE, BOOK_FAIRS_CONSULTANT_ID, BOOK_FAIR_ABCD_MARKER, BOOK_FAIR_SIZE_ID , BRN, BUSINESS_STYLE_ID , CARRIER_ADDRESS  , CARRIER_LABEL_ID , CITY, CLASS_ID, COMMENTS, COST_EXPIRED , COUNTRY, CREATE_DATE, CTC, CUSTOMER_ID, DATE_CUSTOMER_STATEMENT_SENT, DATE_LAST_MODIFIED, DECILE_ID, DEFAULT_DISCOUNT_ID, DEFAULT_DISCOUNT_RATE, DEFAULT_WT_CODE_ID, DELIVERY_INSTRUCTION, DEPARTMENT_ID, DIRECT_DEBIT, EFT_BILL_PAYMENT, EFT_CUSTOMER_REFUND_PAYMENT, EFT_FILE_FORMAT_ID, ELIGIBLE_FOR_APPROVAL, EMAIL, EMAIL_ADDRESS, EMAIL_ADDRESS_FOR_PAYMENT_NOT, EMAIL_ADDRESS_FOR_PAYMENT_NO_0, EMAIL_FOR_CUSTOMER_STATEMENT, EMAIL_FOR_CUSTOMER_STATEMENT_ , EMAIL_FOR_CUSTOMER_STATEMENT_0, EMAIL_FOR_CUSTOMER_STATEMENT_1 , EMPLOYEE_EXTID, EMPLOYEE_ID, EMPLOYEE_ID_0 , EMPLOYEE_TYPE_ID, FAIR_SIZE, FAIR_TYPE_ID, FINANCIAL, FIRSTNAME , FORWARDERS_ADDRESS_ID , FORWARDER_ADDRESS, FREIGHT_ESTIMATE_METHOD_ID, FREIGHT_RATE, FULL_NAME, HIREDDATE, INITIALS, ISINACTIVE, ISSALESREP, ISSUPPORTREP, JOBTITLE , LABOR_COST , LASTNAME, LASTREVIEWDATE, LAST_MODIFIED_DATE, LAST_SALES_ACTIVITY, LEGACY_CUSTOMER_IDCUSTOM, LINE1, LINE2, LINE3, LINE_OF_BUSINESS_ID, LOCATION_ID, LOGINACCESS, LSA_LINK, LSA_LINK_NAME, MIDDLENAME, MOE_ID, NAME , NEXTREVIEWDATE, NO_OF_CHILDREN_ENROLLED, OLD_CUSTOMER_CODE, OLD_PARENT_CODE, OPENING_BALANCE , PHILHEALTH , PHONE , PRICE_GROUP_ID, PROJECT_SCOPE_STATEMENT  , PROVIDENT_FUND_NUMBER, REGION_ID, RELEASEDATE, REWARDS_BAND_ID, REWARD_EARNER_ID, ROUTE_CODE_ID , SALES_TERRITORYDO_NOT_USE_ID, SALUTATION , SCHEMAI1L_FOR_INVOICE, SCHEMAIL_FOR_INVOICE, SCHOLASTIC_SALES_TERRITORY_ID, SELLING_RIGHTS_ID, SHIPPING_PREFERENCE_ID, SNIPP_MEMBER_ID, SOCIALSECURITYNUMBER , SOR_DISCOUNT_ID , SOR_DURATION_FROM_DAYS, SOR_DURATION_TO_DAYS, SOR_TAG, SOR_THRESHOLD, SPONSOR, STAPLES, STATE, STATUS, SUBSIDIARY_ID, SUPERVISOR_ID, TAX_CONTACT_FIRST_NAME , TAX_CONTACT_ID , TAX_CONTACT_LAST_NAME, TAX_CONTACT_MIDDLE_NAME, THIRD_PARTY, TIN, TOTAL_QUANTITY, TRANSACTIONS_NEED_APPROVAL, UEN, UK_OTC_CODE , US_OTC_CODE, VAT_REGISTRATION_NO, WORK_CALENDAR_ID , ZIPCODE , ZONE_NUMBER_ID , SUPERVISOR_NAME, APPROVER_NAME , SUBSIDIARY, LINE_OF_BUSINESS , LOCATION , COST_CENTER) 
select ABCD_MARKER_ID,ACCOUNTNUMBER,ACTUAL_COST,ADDRESS,ALTERNATE_CUSTOMER_EMAIL,ALTERNATE_CUSTOMER_EMAIL1,ALTERNATE_CUSTOMER_EMAIL2,APPLY_FREIGHT,APPROVALLIMIT,APPROVER_ID,BACKORDERS_ALLOWED,BACK_ORDER_SPLIT, BILLING_CLASS_ID, BIRTHDATE, BOOK_FAIRS_CONSULTANT_ID, BOOK_FAIR_ABCD_MARKER, BOOK_FAIR_SIZE_ID , BRN, BUSINESS_STYLE_ID , CARRIER_ADDRESS  , CARRIER_LABEL_ID , CITY, CLASS_ID, COMMENTS, COST_EXPIRED , COUNTRY, CREATE_DATE, CTC, CUSTOMER_ID, DATE_CUSTOMER_STATEMENT_SENT, DATE_LAST_MODIFIED, DECILE_ID, DEFAULT_DISCOUNT_ID, DEFAULT_DISCOUNT_RATE, DEFAULT_WT_CODE_ID, DELIVERY_INSTRUCTION, DEPARTMENT_ID, DIRECT_DEBIT, EFT_BILL_PAYMENT, EFT_CUSTOMER_REFUND_PAYMENT, EFT_FILE_FORMAT_ID, ELIGIBLE_FOR_APPROVAL, EMAIL, EMAIL_ADDRESS, EMAIL_ADDRESS_FOR_PAYMENT_NOT, EMAIL_ADDRESS_FOR_PAYMENT_NO_0, EMAIL_FOR_CUSTOMER_STATEMENT, EMAIL_FOR_CUSTOMER_STATEMENT_ , EMAIL_FOR_CUSTOMER_STATEMENT_0, EMAIL_FOR_CUSTOMER_STATEMENT_1 , EMPLOYEE_EXTID, EMPLOYEE_ID, EMPLOYEE_ID_0 , EMPLOYEE_TYPE_ID, FAIR_SIZE, FAIR_TYPE_ID, FINANCIAL, FIRSTNAME , FORWARDERS_ADDRESS_ID , FORWARDER_ADDRESS, FREIGHT_ESTIMATE_METHOD_ID, FREIGHT_RATE, FULL_NAME, HIREDDATE, INITIALS, ISINACTIVE, ISSALESREP, ISSUPPORTREP, JOBTITLE , LABOR_COST , LASTNAME, LASTREVIEWDATE, LAST_MODIFIED_DATE, LAST_SALES_ACTIVITY, LEGACY_CUSTOMER_IDCUSTOM, LINE1, LINE2, LINE3, LINE_OF_BUSINESS_ID, LOCATION_ID, LOGINACCESS, LSA_LINK, LSA_LINK_NAME, MIDDLENAME, MOE_ID, NAME , NEXTREVIEWDATE, NO_OF_CHILDREN_ENROLLED, OLD_CUSTOMER_CODE, OLD_PARENT_CODE, OPENING_BALANCE , PHILHEALTH , PHONE , PRICE_GROUP_ID, PROJECT_SCOPE_STATEMENT  , PROVIDENT_FUND_NUMBER, REGION_ID, RELEASEDATE, REWARDS_BAND_ID, REWARD_EARNER_ID, ROUTE_CODE_ID , SALES_TERRITORYDO_NOT_USE_ID, SALUTATION , SCHEMAI1L_FOR_INVOICE, SCHEMAIL_FOR_INVOICE, SCHOLASTIC_SALES_TERRITORY_ID, SELLING_RIGHTS_ID, SHIPPING_PREFERENCE_ID, SNIPP_MEMBER_ID, SOCIALSECURITYNUMBER , SOR_DISCOUNT_ID , SOR_DURATION_FROM_DAYS, SOR_DURATION_TO_DAYS, SOR_TAG, SOR_THRESHOLD, SPONSOR, STAPLES, STATE, STATUS, SUBSIDIARY_ID, SUPERVISOR_ID, TAX_CONTACT_FIRST_NAME , TAX_CONTACT_ID , TAX_CONTACT_LAST_NAME, TAX_CONTACT_MIDDLE_NAME, THIRD_PARTY, TIN, TOTAL_QUANTITY, TRANSACTIONS_NEED_APPROVAL, UEN, UK_OTC_CODE , US_OTC_CODE, VAT_REGISTRATION_NO, WORK_CALENDAR_ID , ZIPCODE , ZONE_NUMBER_ID , SUPERVISOR_NAME, APPROVER_NAME , SUBSIDIARY, LINE_OF_BUSINESS , LOCATION , COST_CENTER from dw_prestage.employees_insert;

/* stage -> insert into stage records which have been created */
insert into dw_stage.employees (ABCD_MARKER_ID,ACCOUNTNUMBER,ACTUAL_COST,ADDRESS,ALTERNATE_CUSTOMER_EMAIL,ALTERNATE_CUSTOMER_EMAIL1,ALTERNATE_CUSTOMER_EMAIL2,APPLY_FREIGHT,APPROVALLIMIT,APPROVER_ID,BACKORDERS_ALLOWED,BACK_ORDER_SPLIT, BILLING_CLASS_ID, BIRTHDATE, BOOK_FAIRS_CONSULTANT_ID, BOOK_FAIR_ABCD_MARKER, BOOK_FAIR_SIZE_ID , BRN, BUSINESS_STYLE_ID , CARRIER_ADDRESS  , CARRIER_LABEL_ID , CITY, CLASS_ID, COMMENTS, COST_EXPIRED , COUNTRY, CREATE_DATE, CTC, CUSTOMER_ID, DATE_CUSTOMER_STATEMENT_SENT, DATE_LAST_MODIFIED, DECILE_ID, DEFAULT_DISCOUNT_ID, DEFAULT_DISCOUNT_RATE, DEFAULT_WT_CODE_ID, DELIVERY_INSTRUCTION, DEPARTMENT_ID, DIRECT_DEBIT, EFT_BILL_PAYMENT, EFT_CUSTOMER_REFUND_PAYMENT, EFT_FILE_FORMAT_ID, ELIGIBLE_FOR_APPROVAL, EMAIL, EMAIL_ADDRESS, EMAIL_ADDRESS_FOR_PAYMENT_NOT, EMAIL_ADDRESS_FOR_PAYMENT_NO_0, EMAIL_FOR_CUSTOMER_STATEMENT, EMAIL_FOR_CUSTOMER_STATEMENT_ , EMAIL_FOR_CUSTOMER_STATEMENT_0, EMAIL_FOR_CUSTOMER_STATEMENT_1 , EMPLOYEE_EXTID, EMPLOYEE_ID, EMPLOYEE_ID_0 , EMPLOYEE_TYPE_ID, FAIR_SIZE, FAIR_TYPE_ID, FINANCIAL, FIRSTNAME , FORWARDERS_ADDRESS_ID , FORWARDER_ADDRESS, FREIGHT_ESTIMATE_METHOD_ID, FREIGHT_RATE, FULL_NAME, HIREDDATE, INITIALS, ISINACTIVE, ISSALESREP, ISSUPPORTREP, JOBTITLE , LABOR_COST , LASTNAME, LASTREVIEWDATE, LAST_MODIFIED_DATE, LAST_SALES_ACTIVITY, LEGACY_CUSTOMER_IDCUSTOM, LINE1, LINE2, LINE3, LINE_OF_BUSINESS_ID, LOCATION_ID, LOGINACCESS, LSA_LINK, LSA_LINK_NAME, MIDDLENAME, MOE_ID, NAME , NEXTREVIEWDATE, NO_OF_CHILDREN_ENROLLED, OLD_CUSTOMER_CODE, OLD_PARENT_CODE, OPENING_BALANCE , PHILHEALTH , PHONE , PRICE_GROUP_ID, PROJECT_SCOPE_STATEMENT  , PROVIDENT_FUND_NUMBER, REGION_ID, RELEASEDATE, REWARDS_BAND_ID, REWARD_EARNER_ID, ROUTE_CODE_ID , SALES_TERRITORYDO_NOT_USE_ID, SALUTATION , SCHEMAI1L_FOR_INVOICE, SCHEMAIL_FOR_INVOICE, SCHOLASTIC_SALES_TERRITORY_ID, SELLING_RIGHTS_ID, SHIPPING_PREFERENCE_ID, SNIPP_MEMBER_ID, SOCIALSECURITYNUMBER , SOR_DISCOUNT_ID , SOR_DURATION_FROM_DAYS, SOR_DURATION_TO_DAYS, SOR_TAG, SOR_THRESHOLD, SPONSOR, STAPLES, STATE, STATUS, SUBSIDIARY_ID, SUPERVISOR_ID, TAX_CONTACT_FIRST_NAME , TAX_CONTACT_ID , TAX_CONTACT_LAST_NAME, TAX_CONTACT_MIDDLE_NAME, THIRD_PARTY, TIN, TOTAL_QUANTITY, TRANSACTIONS_NEED_APPROVAL, UEN, UK_OTC_CODE , US_OTC_CODE, VAT_REGISTRATION_NO, WORK_CALENDAR_ID , ZIPCODE , ZONE_NUMBER_ID , SUPERVISOR_NAME, APPROVER_NAME , SUBSIDIARY, LINE_OF_BUSINESS , LOCATION , COST_CENTER)
select ABCD_MARKER_ID,ACCOUNTNUMBER,ACTUAL_COST,ADDRESS,ALTERNATE_CUSTOMER_EMAIL,ALTERNATE_CUSTOMER_EMAIL1,ALTERNATE_CUSTOMER_EMAIL2,APPLY_FREIGHT,APPROVALLIMIT,APPROVER_ID,BACKORDERS_ALLOWED,BACK_ORDER_SPLIT, BILLING_CLASS_ID, BIRTHDATE, BOOK_FAIRS_CONSULTANT_ID, BOOK_FAIR_ABCD_MARKER, BOOK_FAIR_SIZE_ID , BRN, BUSINESS_STYLE_ID , CARRIER_ADDRESS  , CARRIER_LABEL_ID , CITY, CLASS_ID, COMMENTS, COST_EXPIRED , COUNTRY, CREATE_DATE, CTC, CUSTOMER_ID, DATE_CUSTOMER_STATEMENT_SENT, DATE_LAST_MODIFIED, DECILE_ID, DEFAULT_DISCOUNT_ID, DEFAULT_DISCOUNT_RATE, DEFAULT_WT_CODE_ID, DELIVERY_INSTRUCTION, DEPARTMENT_ID, DIRECT_DEBIT, EFT_BILL_PAYMENT, EFT_CUSTOMER_REFUND_PAYMENT, EFT_FILE_FORMAT_ID, ELIGIBLE_FOR_APPROVAL, EMAIL, EMAIL_ADDRESS, EMAIL_ADDRESS_FOR_PAYMENT_NOT, EMAIL_ADDRESS_FOR_PAYMENT_NO_0, EMAIL_FOR_CUSTOMER_STATEMENT, EMAIL_FOR_CUSTOMER_STATEMENT_ , EMAIL_FOR_CUSTOMER_STATEMENT_0, EMAIL_FOR_CUSTOMER_STATEMENT_1 , EMPLOYEE_EXTID, EMPLOYEE_ID, EMPLOYEE_ID_0 , EMPLOYEE_TYPE_ID, FAIR_SIZE, FAIR_TYPE_ID, FINANCIAL, FIRSTNAME , FORWARDERS_ADDRESS_ID , FORWARDER_ADDRESS, FREIGHT_ESTIMATE_METHOD_ID, FREIGHT_RATE, FULL_NAME, HIREDDATE, INITIALS, ISINACTIVE, ISSALESREP, ISSUPPORTREP, JOBTITLE , LABOR_COST , LASTNAME, LASTREVIEWDATE, LAST_MODIFIED_DATE, LAST_SALES_ACTIVITY, LEGACY_CUSTOMER_IDCUSTOM, LINE1, LINE2, LINE3, LINE_OF_BUSINESS_ID, LOCATION_ID, LOGINACCESS, LSA_LINK, LSA_LINK_NAME, MIDDLENAME, MOE_ID, NAME , NEXTREVIEWDATE, NO_OF_CHILDREN_ENROLLED, OLD_CUSTOMER_CODE, OLD_PARENT_CODE, OPENING_BALANCE , PHILHEALTH , PHONE , PRICE_GROUP_ID, PROJECT_SCOPE_STATEMENT  , PROVIDENT_FUND_NUMBER, REGION_ID, RELEASEDATE, REWARDS_BAND_ID, REWARD_EARNER_ID, ROUTE_CODE_ID , SALES_TERRITORYDO_NOT_USE_ID, SALUTATION , SCHEMAI1L_FOR_INVOICE, SCHEMAIL_FOR_INVOICE, SCHOLASTIC_SALES_TERRITORY_ID, SELLING_RIGHTS_ID, SHIPPING_PREFERENCE_ID, SNIPP_MEMBER_ID, SOCIALSECURITYNUMBER , SOR_DISCOUNT_ID , SOR_DURATION_FROM_DAYS, SOR_DURATION_TO_DAYS, SOR_TAG, SOR_THRESHOLD, SPONSOR, STAPLES, STATE, STATUS, SUBSIDIARY_ID, SUPERVISOR_ID, TAX_CONTACT_FIRST_NAME , TAX_CONTACT_ID , TAX_CONTACT_LAST_NAME, TAX_CONTACT_MIDDLE_NAME, THIRD_PARTY, TIN, TOTAL_QUANTITY, TRANSACTIONS_NEED_APPROVAL, UEN, UK_OTC_CODE , US_OTC_CODE, VAT_REGISTRATION_NO, WORK_CALENDAR_ID , ZIPCODE , ZONE_NUMBER_ID , SUPERVISOR_NAME, APPROVER_NAME , SUBSIDIARY, LINE_OF_BUSINESS , LOCATION , COST_CENTER from dw_prestage.employees
where exists ( select 1 from 
dw_prestage.employees_update
where dw_prestage.employees_update.employee_id = dw_prestage.employees.employee_id);

commit;


/* dimension ->insert new records in dim employees */

insert into dw.employees ( 
  EMPLOYEE_ID
,NAME
,FULL_NAME
,FIRSTNAME
,LASTNAME
,INITIALS
,JOB_TITLE
,EMAIL
,LINE1
,LINE2
,LINE3
,ZIPCODE
,CITY
,STATE
,COUNTRY
,SUPERVISOR_NAME
,SUPERVISOR_ID
,APPROVER_ID
,APPROVER_NAME
,SUBSIDIARY
,SUBSIDIARY_ID
,LINE_OF_BUSINESS
,LINE_OF_BUSINESS_ID
,LOCATION
,LOCATION_ID
,COST_CENTER
,COST_CENTER_ID
,HIRE_DATE
,RELEASE_DATE
,DATE_ACTIVE_FROM
,DATE_ACTIVE_TO
,DW_ACTIVE  )
select 
 employee_id
 ,DECODE(LENGTH(NAME),0,'NA_GDW',NAME)
 ,DECODE(LENGTH(FULL_NAME),0,'NA_GDW',FULL_NAME )         
 ,DECODE(LENGTH(FIRSTNAME),0,'NA_GDW',FIRSTNAME   )      
 ,DECODE(LENGTH(LASTNAME),0,'NA_GDW', LASTNAME   )    
 ,DECODE(LENGTH(INITIALS),0,'NA_GDW', INITIALS )    
 ,DECODE(LENGTH(JOBTITLE),0,'NA_GDW', JOBTITLE )    
 ,DECODE(LENGTH(EMAIL),0,'NA_GDW', EMAIL   )
 ,DECODE(LENGTH(LINE1),0,'NA_GDW', LINE1  )         
 ,DECODE(LENGTH(LINE2),0,'NA_GDW', LINE2  )
 ,DECODE(LENGTH(LINE3),0,'NA_GDW', LINE3  )         
 ,DECODE(LENGTH(ZIPCODE),0,'NA_GDW', ZIPCODE)          
 ,DECODE(LENGTH(CITY),0,'NA_GDW',CITY )             
 ,DECODE(LENGTH(STATE),0,'NA_GDW',STATE )            
 ,DECODE(LENGTH(COUNTRY),0,'NA_GDW', COUNTRY )         
 ,DECODE(LENGTH(SUPERVISOR_NAME),0,'NA_GDW',SUPERVISOR_NAME)       
 ,NVL(SUPERVISOR_ID , -99)  
 ,NVL(APPROVER_ID , -99) 
 ,DECODE(LENGTH(APPROVER_NAME),0,'NA_GDW',APPROVER_NAME)
  ,DECODE(LENGTH(SUBSIDIARY),0,'NA_GDW',SUBSIDIARY)
 ,NVL(SUBSIDIARY_ID ,-99)  
 ,DECODE(LENGTH(LINE_OF_BUSINESS),0,'NA_GDW',LINE_OF_BUSINESS)
 ,NVL(LINE_OF_BUSINESS_ID ,-99)  
 ,DECODE(LENGTH(LOCATION),0,'NA_GDW', LOCATION) 
 ,NVL(LOCATION_ID , -99)
 ,DECODE(LENGTH(COST_CENTER),0,'NA_GDW', COST_CENTER) 
 ,NVL(DEPARTMENT_ID , -99) 
 ,NVL(HIREDDATE,'1900-12-31 00:00:00') 
 ,NVL(RELEASEDATE,'1900-12-31 00:00:00') 
 ,sysdate
 ,'9999-12-31 23:59:59'
 ,'A'
  from 
dw_prestage.employees_insert A;

/* dimension -> update old record as part of SCD2 maintenance*/

UPDATE dw.employees
   SET dw_active = 'I' ,
	   DATE_ACTIVE_TO = (sysdate -1)
WHERE dw_active = 'A'
      and sysdate >= date_active_from and sysdate < date_active_to
	  and exists ( select 1 from dw_prestage.employees_update
	  WHERE dw.employees.employee_id = dw_prestage.employees_update.employee_id
	  and dw_prestage.employees_update.ch_type = 2);

/* dimension -> insert the new records as part of SCD2 maintenance*/

insert into dw.employees ( 
   EMPLOYEE_ID
,NAME
,FULL_NAME
,FIRSTNAME
,LASTNAME
,INITIALS
,JOB_TITLE
,EMAIL
,LINE1
,LINE2
,LINE3
,ZIPCODE
,CITY
,STATE
,COUNTRY
,SUPERVISOR_NAME
,SUPERVISOR_ID
,APPROVER_ID
,APPROVER_NAME
,SUBSIDIARY
,SUBSIDIARY_ID
,LINE_OF_BUSINESS
,LINE_OF_BUSINESS_ID
,LOCATION
,LOCATION_ID
,COST_CENTER
,COST_CENTER_ID
,HIRE_DATE
,RELEASE_DATE
,DATE_ACTIVE_FROM
,DATE_ACTIVE_TO
,DW_ACTIVE  )
select 
 employee_id
 ,DECODE(LENGTH(NAME),0,'NA_GDW',NAME)
 ,DECODE(LENGTH(FULL_NAME),0,'NA_GDW',FULL_NAME )         
 ,DECODE(LENGTH(FIRSTNAME),0,'NA_GDW',FIRSTNAME   )      
 ,DECODE(LENGTH(LASTNAME),0,'NA_GDW', LASTNAME   )    
 ,DECODE(LENGTH(INITIALS),0,'NA_GDW', INITIALS )    
 ,DECODE(LENGTH(JOBTITLE),0,'NA_GDW', JOBTITLE )    
 ,DECODE(LENGTH(EMAIL),0,'NA_GDW', EMAIL   )
 ,DECODE(LENGTH(LINE1),0,'NA_GDW', LINE1  )         
 ,DECODE(LENGTH(LINE2),0,'NA_GDW', LINE2  )
 ,DECODE(LENGTH(LINE3),0,'NA_GDW', LINE3  )         
 ,DECODE(LENGTH(ZIPCODE),0,'NA_GDW', ZIPCODE)          
 ,DECODE(LENGTH(CITY),0,'NA_GDW',CITY )             
 ,DECODE(LENGTH(STATE),0,'NA_GDW',STATE )            
 ,DECODE(LENGTH(COUNTRY),0,'NA_GDW', COUNTRY )         
 ,DECODE(LENGTH(SUPERVISOR_NAME),0,'NA_GDW',SUPERVISOR_NAME)       
 ,NVL(SUPERVISOR_ID , -99)  
 ,NVL(APPROVER_ID , -99) 
 ,DECODE(LENGTH(APPROVER_NAME),0,'NA_GDW',APPROVER_NAME)
  ,DECODE(LENGTH(SUBSIDIARY),0,'NA_GDW',SUBSIDIARY)
 ,NVL(SUBSIDIARY_ID ,-99)  
 ,DECODE(LENGTH(LINE_OF_BUSINESS),0,'NA_GDW',LINE_OF_BUSINESS)
 ,NVL(LINE_OF_BUSINESS_ID ,-99)  
 ,DECODE(LENGTH(LOCATION),0,'NA_GDW', LOCATION) 
 ,NVL(LOCATION_ID , -99)
 ,DECODE(LENGTH(COST_CENTER),0,'NA_GDW', COST_CENTER) 
 ,NVL(DEPARTMENT_ID , -99) 
 ,NVL(HIREDDATE,'1900-12-31 00:00:00') 
 ,NVL(RELEASEDATE,'1900-12-31 00:00:00') 
 ,sysdate
 ,'9999-12-31 23:59:59'
 ,'A'
from 
dw_prestage.employees A
WHERE exists (select 1 from dw_prestage.employees_update
	  WHERE a.employee_id = dw_prestage.employees_update.employee_id
	  and dw_prestage.employees_update.ch_type = 2) ;
	  
/* dimension -> update records as part of SCD1 maintenance */

UPDATE dw.employees 
   SET  
       JOB_TITLE            =   DECODE(LENGTH(dw_prestage.employees.JOBTITLE),0,'NA_GDW', dw_prestage.employees.JOBTITLE )    
      ,EMAIL                =   DECODE(LENGTH(dw_prestage.employees.EMAIL),0,'NA_GDW', dw_prestage.employees.EMAIL   )
      ,LINE1                =   DECODE(LENGTH(dw_prestage.employees.LINE1),0,'NA_GDW', dw_prestage.employees.LINE1  )         
      ,LINE2                =   DECODE(LENGTH(dw_prestage.employees.LINE2),0,'NA_GDW', dw_prestage.employees.LINE2  )
      ,LINE3                =   DECODE(LENGTH(dw_prestage.employees.LINE3),0,'NA_GDW', dw_prestage.employees.LINE3  )       
      ,ZIPCODE              =   DECODE(LENGTH(dw_prestage.employees.ZIPCODE),0,'NA_GDW', dw_prestage.employees.ZIPCODE)       
      ,CITY                 =   DECODE(LENGTH(dw_prestage.employees.CITY),0,'NA_GDW',dw_prestage.employees.CITY )        
      ,STATE                =   DECODE(LENGTH(dw_prestage.employees.STATE),0,'NA_GDW',dw_prestage.employees.STATE )         
      ,COUNTRY              =   DECODE(LENGTH(dw_prestage.employees.COUNTRY),0,'NA_GDW', dw_prestage.employees.COUNTRY )     
      ,SUBSIDIARY           =   DECODE(LENGTH(dw_prestage.employees.SUBSIDIARY),0,'NA_GDW',dw_prestage.employees.SUBSIDIARY)
      ,SUBSIDIARY_ID        =   NVL(dw_prestage.employees.SUBSIDIARY_ID ,-99)  
      ,LINE_OF_BUSINESS     =   DECODE(LENGTH(dw_prestage.employees.LINE_OF_BUSINESS),0,'NA_GDW',dw_prestage.employees.LINE_OF_BUSINESS)
      ,LINE_OF_BUSINESS_ID  =   NVL(dw_prestage.employees.LINE_OF_BUSINESS_ID ,-99)  
      ,LOCATION             =   DECODE(LENGTH(dw_prestage.employees.LOCATION),0,'NA_GDW', dw_prestage.employees.LOCATION) 
      ,LOCATION_ID          =   NVL(dw_prestage.employees.LOCATION_ID , -99)
      ,COST_CENTER          =   DECODE(LENGTH(dw_prestage.employees.COST_CENTER),0,'NA_GDW', dw_prestage.employees.COST_CENTER) 
      ,COST_CENTER_ID       =   NVL(DEPARTMENT_ID , -99) 
      ,HIRE_DATE            =   NVL(HIREDDATE,'1900-12-31 00:00:00') 
      ,RELEASE_DATE         =   NVL(RELEASEDATE,'1900-12-31 00:00:00')   
   FROM dw_prestage.employees
WHERE dw.employees.employee_id = dw_prestage.employees.employee_id
and exists (select 1 from dw_prestage.employees_update
	  WHERE dw_prestage.employees.employee_id = dw_prestage.employees_update.employee_id
	  and dw_prestage.employees_update.ch_type = 1);

/* dimension -> logically delete dw records */
update dw.employees
set DATE_ACTIVE_TO = sysdate-1,
dw_active = 'I'
FROM dw_prestage.employees_delete
WHERE dw.employees.employee_id = dw_prestage.employees_delete.employee_id;

commit;
